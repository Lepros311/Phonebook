// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Phonebook;

#nullable disable

namespace Phonebook.Migrations
{
    [DbContext(typeof(ContactsContext))]
    partial class ContactsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Phonebook.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Friends"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Family"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Coworkers"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Other"
                        });
                });

            modelBuilder.Entity("Phonebook.Models.Contact", b =>
                {
                    b.Property<int>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContactId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContactId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            ContactId = 1,
                            CategoryId = 1,
                            ContactName = "Tom Smith",
                            Email = "tsmith@email.com",
                            PhoneNumber = "301-593-4929"
                        },
                        new
                        {
                            ContactId = 2,
                            CategoryId = 1,
                            ContactName = "Judy Garland",
                            Email = "jgarland@email.com",
                            PhoneNumber = "202-492-4921"
                        },
                        new
                        {
                            ContactId = 3,
                            CategoryId = 2,
                            ContactName = "Frank Mitchell",
                            Email = "fmitchelle@email.com",
                            PhoneNumber = "410-492-5921"
                        },
                        new
                        {
                            ContactId = 4,
                            CategoryId = 2,
                            ContactName = "Sally Struthers",
                            Email = "sstruthers@email.com",
                            PhoneNumber = "301-592-9599"
                        },
                        new
                        {
                            ContactId = 5,
                            CategoryId = 3,
                            ContactName = "Otis McBeefcake",
                            Email = "omcbeefcake@email.com",
                            PhoneNumber = "202-494-5929"
                        },
                        new
                        {
                            ContactId = 6,
                            CategoryId = 3,
                            ContactName = "Amy Powershell",
                            Email = "apowershell@email.com",
                            PhoneNumber = "410-992-3214"
                        },
                        new
                        {
                            ContactId = 7,
                            CategoryId = 4,
                            ContactName = "Bobby Thompson",
                            Email = "bthompson@email.com",
                            PhoneNumber = "301-399-3290"
                        },
                        new
                        {
                            ContactId = 8,
                            CategoryId = 4,
                            ContactName = "Greta Shoehorn",
                            Email = "gshoehorn@email.com",
                            PhoneNumber = "301-233-9942"
                        });
                });

            modelBuilder.Entity("Phonebook.Models.Contact", b =>
                {
                    b.HasOne("Phonebook.Models.Category", "Category")
                        .WithMany("Contacts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Phonebook.Models.Category", b =>
                {
                    b.Navigation("Contacts");
                });
#pragma warning restore 612, 618
        }
    }
}
